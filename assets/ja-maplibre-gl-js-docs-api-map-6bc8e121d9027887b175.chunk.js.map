{"version":3,"sources":["webpack:///./docs/util/linker.js","webpack:///./docs/util/api-filter-items.js","webpack:///./docs/pages/api/map.js","webpack:///./docs/components/api/github.js","webpack:///./docs/components/api/section-heading.js","webpack:///./docs/util/formatters.js","webpack:///./docs/components/api/item-member.js","webpack:///./docs/components/api/title.js","webpack:///./docs/components/api/section-wrapper.js","webpack:///./docs/components/api/members-list.js","webpack:///./docs/util/search-members.js","webpack:///./docs/components/api/augments.js","webpack:///./docs/components/api/class-name.js","webpack:///./docs/components/api/parameters.js","webpack:///./docs/components/api/properties.js","webpack:///./docs/components/api/returns.js","webpack:///./docs/components/api/throws.js","webpack:///./docs/components/copyable.js","webpack:///./docs/components/api/examples.js","webpack:///./docs/components/api/related.js","webpack:///./docs/util/empty.js","webpack:///./docs/components/api/item-contents.js","webpack:///./docs/components/api/item.js","webpack:///./docs/components/api/api-page-items.js","webpack:///./docs/components/api/page-wrapper.js","webpack:///./_batfish_tmp/_ja-maplibre-gl-js-docs_api_map.js"],"names":["findPage","require","GithubSlugger","module","exports","linker","namespace","page","path","indexOf","toLowerCase","slugger","nv","split","map","v","slug","join","docs","pageName","filter","doc","name","Page","this","props","React","Component","GitHub","section","context","github","className","href","url","iconBefore","SectionHeading","headingLevel","HeadingLevel","Fragment","id","linkerStack","LinkerStack","namespaceResolver","formatters","createFormatters","link","toHtml","ast","inline","children","length","type","concat","slice","dangerouslySetInnerHTML","__html","markdown","formatType","ApiItemMember","m","state","disclosed","hashChange","bind","member","aria-expanded","classnames","onClick","e","setState","history","pushState","location","hash","preventDefault","style","fontSize","lineHeight","fontWeight","kind","color","parameters","size","nested","window","prevProps","closeAll","addEventListener","removeEventListener","Title","SectionWrapper","title","titleComponent","MembersList","value","clearHash","pathname","members","filteredMembers","arr","search","Array","isArray","fuse","Fuse","keys","threshold","result","item","searchMembers","xlinkHref","themeControlInput","themeLabel","label","placeholder","onChange","filterMembers","i","key","Augments","augments","tag","autolink","ClassName","Parameters","params","param","default","description","properties","width","borderTopLeftRadius","borderTopRightRadius","property","wordBreak","Properties","Returns","returns","Throws","throws","Copyable","highlight","html","highlightHtml","markup","javascript","highlightJsx","maxHeight","code","highlighter","lang","Examples","examples","example","caption","Related","sees","see","empty","ApiItemContents","membersList","interface","constructorComment","access","static","instance","events","ApiItem","apiFilterItems","ApiPageItems","pageDocSource","child","renderDescription","renderItems","Section","SingleSection","Api","frontMatter","hideFeedback","component"],"mappings":"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","file":"ja-maplibre-gl-js-docs-api-map-6bc8e121d9027887b175.chunk.js","sourcesContent":["const { findPage } = require('./find-page');\nconst GithubSlugger = require('github-slugger');\n\nfunction linker(namespace) {\n    const page = findPage(namespace);\n    const path = page ? `/maplibre-gl-js-docs/api/${page}/` : '';\n    if (namespace.indexOf('.') > -1) {\n        return `${path}#${namespace.toLowerCase()}`;\n    } else {\n        const slugger = new GithubSlugger();\n        const names = namespace.split('#');\n        const nv = names.map((v) => `#${slugger.slug(v)}`).join('');\n        return `${path}${nv}`;\n    }\n}\n\nmodule.exports = {\n    linker\n};\n","const docs = require('../components/api.json');\n\nmodule.exports = (pageName) => docs.filter((doc) => doc.name === pageName);\n","/*---\ntitle: Map\ndescription: The Map object represents the map on your page. It exposes methods and properties that enable you to programmatically change the map, and fires events as users interact with it.\ncontentType: API\norder: 2\nlayout: page\nlanguage:\n- JavaScript\nproducts:\n- MapLibre GL JS\n---*/\n\nimport React from 'react';\nimport PageWrapper from '../../components/api/page-wrapper.js';\n\nexport default class Page extends React.Component {\n    render() {\n        return <PageWrapper name=\"Map class\" {...this.props} />;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconText from '@mapbox/mr-ui/icon-text';\n\nexport default class GitHub extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            section.context &&\n            section.context.github && (\n                <a\n                    className=\"link--gray unprose block mt-neg12 txt-mono mb18\"\n                    href={section.context.github.url}\n                >\n                    <IconText iconBefore=\"github\">\n                        {section.context.github.path}\n                    </IconText>\n                </a>\n            )\n        );\n    }\n}\n\nGitHub.propTypes = {\n    section: PropTypes.shape({\n        context: PropTypes.shape({\n            github: PropTypes.shape({\n                url: PropTypes.string,\n                path: PropTypes.string\n            })\n        })\n    })\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Github from './github';\n\nexport default class SectionHeading extends React.Component {\n    render() {\n        const { section, headingLevel } = this.props;\n        const HeadingLevel = `h${headingLevel}`;\n        return (\n            <React.Fragment>\n                <HeadingLevel\n                    className=\"mt36 mb18 txt-xl unprose anchor\"\n                    id={section.namespace.toLowerCase()}\n                >\n                    <a\n                        className=\"unprose color-blue-on-hover\"\n                        href={`#${section.namespace.toLowerCase()}`}\n                    >\n                        {section.name}\n                    </a>\n                </HeadingLevel>\n                <Github section={section} />\n            </React.Fragment>\n        );\n    }\n}\n\nSectionHeading.propTypes = {\n    headingLevel: PropTypes.number,\n    section: PropTypes.shape({\n        namespace: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        context: PropTypes.shape({\n            github: PropTypes.shape({\n                url: PropTypes.string.isRequired,\n                path: PropTypes.string.isRequired\n            })\n        })\n    }).isRequired\n};\n","import React from 'react';\nimport createFormatters from 'documentation/src/output/util/formatters';\nimport LinkerStack from 'documentation/src/output/util/linker_stack';\n\nimport docs from '../components/api.json';\n\nconst { linker } = require('./linker');\n\nconst linkerStack = new LinkerStack({}).namespaceResolver(docs, (namespace) => {\n    return linker(namespace);\n});\n\nexport const formatters = createFormatters(linkerStack.link);\n\n// convert ast to html\nexport function toHtml(ast, inline) {\n    if (\n        inline &&\n        ast &&\n        ast.children.length &&\n        ast.children[0].type === 'paragraph'\n    ) {\n        ast = {\n            type: 'root',\n            children: ast.children[0].children.concat(ast.children.slice(1))\n        };\n    }\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: `${formatters.markdown(ast)}`\n            }}\n        />\n    );\n}\n\n// format api type into html\nexport function formatType(type) {\n    return (\n        <span\n            dangerouslySetInnerHTML={{ __html: `${formatters.type(type)}` }}\n        />\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatters } from '../../util/formatters';\nimport ApiItem from './item';\nimport Icon from '@mapbox/mr-ui/icon';\nimport classnames from 'classnames';\n\nclass ApiItemMember extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { disclosed: false };\n        this.hashChange = this.hashChange.bind(this);\n    }\n\n    href = (m) => `#${m.namespace.toLowerCase()}`;\n\n    render() {\n        const member = this.props;\n\n        const HeadingLevel = `h${this.props.headingLevel}`;\n        return (\n            <div\n                className=\"scroll-margin-top my6 border border--gray-light bg-gray-faint round\"\n                id={member.namespace.toLowerCase()}\n                aria-expanded={this.state.disclosed}\n            >\n                <React.Fragment>\n                    <button\n                        className={classnames(\n                            'cursor-pointer w-full color-blue-on-hover px12 py6',\n                            {\n                                'txt-bold': this.state.disclosed\n                            }\n                        )}\n                        onClick={(e) => {\n                            this.setState({ disclosed: !this.state.disclosed });\n                            if (history.pushState) {\n                                history.pushState(\n                                    null,\n                                    null,\n                                    this.href(member)\n                                );\n                            } else {\n                                location.hash = this.href(member);\n                            }\n\n                            e.preventDefault();\n                        }}\n                    >\n                        <HeadingLevel\n                            style={{\n                                fontSize: '13px',\n                                lineHeight: '24px',\n                                fontWeight: 'inherit'\n                            }}\n                            className=\"txt-mono truncate mb0 pt0 inline-block\"\n                        >\n                            {member.name}\n                        </HeadingLevel>\n                        {member.kind === 'function' && (\n                            <span\n                                className=\"txt-mono\"\n                                style={{\n                                    color: '#54718f' /* a11y color-gray */\n                                }}\n                                dangerouslySetInnerHTML={{\n                                    __html: `${formatters.parameters(\n                                        member,\n                                        true\n                                    )}`\n                                }}\n                            />\n                        )}\n                        <div className=\"fr\">\n                            <Icon\n                                size={30}\n                                name={\n                                    this.state.disclosed\n                                        ? 'caret-down'\n                                        : 'caret-right'\n                                }\n                                inline={true}\n                            />\n                        </div>\n                    </button>\n                </React.Fragment>\n\n                {this.state.disclosed && (\n                    <div className=\"pt12 pb18 px12 border-t border--gray-light round-b item-member bg-white\">\n                        <ApiItem\n                            nested={true}\n                            location={this.props.location}\n                            {...member}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    hashChange() {\n        if (window.location.hash === this.href(this.props)) {\n            this.setState({ disclosed: true });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.closeAll !== this.props.closeAll) {\n            if (this.props.closeAll && this.state.disclosed) {\n                this.setState({ disclosed: false });\n            }\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('hashchange', this.hashChange);\n        this.hashChange();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('hashchange', this.hashChange);\n    }\n}\n\nApiItemMember.propTypes = {\n    namespace: PropTypes.string,\n    name: PropTypes.string,\n    kind: PropTypes.string,\n    location: PropTypes.object,\n    closeAll: PropTypes.bool,\n    headingLevel: PropTypes.number\n};\n\nexport default ApiItemMember;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport slug from 'slugg';\n\nexport default class Title extends React.Component {\n    render() {\n        const { children, section, headingLevel } = this.props;\n        const pageName =\n            section && section.name === 'Map class' ? 'Map' : section.name;\n        const id = slug(`${pageName || ''} ${children}`);\n        const HeadingLevel = `h${headingLevel}`;\n\n        return (\n            <HeadingLevel id={id} className=\"unprose txt-m mt24 mb3 anchor\">\n                <a\n                    className=\"unprose block color-blue-on-hover txt-bold\"\n                    href={`#${id}`}\n                >\n                    {children}\n                </a>\n            </HeadingLevel>\n        );\n    }\n}\n\nTitle.propTypes = {\n    children: PropTypes.node.isRequired,\n    section: PropTypes.shape({\n        name: PropTypes.string\n    }),\n    headingLevel: PropTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from './title';\n\nexport default class SectionWrapper extends React.Component {\n    render() {\n        const {\n            children,\n            headingLevel,\n            section,\n            title,\n            titleComponent\n        } = this.props;\n        return (\n            <React.Fragment>\n                {title && (\n                    <Title headingLevel={headingLevel} section={section}>\n                        {title}\n                    </Title>\n                )}\n                {titleComponent ? titleComponent : ''}\n                {children}\n            </React.Fragment>\n        );\n    }\n}\n\nSectionWrapper.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string,\n    titleComponent: PropTypes.node,\n    section: PropTypes.object,\n    headingLevel: PropTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ApiItemMember from './item-member';\nimport SectionWrapper from './section-wrapper';\nimport ControlText from '@mapbox/mr-ui/control-text';\nimport { searchMembers } from '../../util/search-members';\nimport slug from 'slugg';\n\nexport default class MembersList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { filter: '', closeAll: false };\n    }\n\n    // close all item members so it's easier to read them\n    filterMembers = (value) => {\n        this.setState({ filter: value, closeAll: true }, () => {\n            this.setState({ closeAll: false });\n        });\n        this.clearHash();\n    };\n\n    // clear hash from window location\n    clearHash = () => {\n        if (history.pushState && window) {\n            history.pushState(null, null, window.location.pathname);\n        }\n    };\n\n    render() {\n        const { title, members } = this.props;\n        const { filter } = this.state;\n        const filteredMembers = filter\n            ? searchMembers(members, filter)\n            : members;\n\n        return (\n            <SectionWrapper title={title} {...this.props}>\n                {members.length > 9 && (\n                    <div className=\"relative\">\n                        <div className=\"absolute flex-parent flex-parent--center-cross flex-parent--center-main w36 h36 color-gray\">\n                            <svg className=\"icon\">\n                                <use xlinkHref=\"#icon-search\"></use>\n                            </svg>\n                        </div>\n                        <ControlText\n                            themeControlInput=\"input pl36\"\n                            id={`filter-${slug(this.props.section.name)}-${slug(\n                                title\n                            )}`}\n                            themeLabel=\"hide-visually\"\n                            label={`Search ${title}`}\n                            placeholder={`Search ${title}`}\n                            onChange={this.filterMembers}\n                            value={filter}\n                        />\n                    </div>\n                )}\n                {filter && (\n                    <div className=\"txt-s color-gray mt3\">\n                        Found {filteredMembers.length} {title} for{' '}\n                        <code>{filter}</code>\n                        <button\n                            className=\"btn btn--stroke btn--s btn--gray ml6\"\n                            onClick={() => this.filterMembers('')}\n                        >\n                            Clear filter\n                        </button>\n                    </div>\n                )}\n\n                {filteredMembers.map((member, i) => (\n                    <ApiItemMember\n                        closeAll={this.state.closeAll}\n                        {...this.props}\n                        key={i}\n                        {...member}\n                        headingLevel={this.props.headingLevel + 1} // increase heading level\n                    />\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nMembersList.propTypes = {\n    title: PropTypes.string.isRequired,\n    members: PropTypes.array.isRequired,\n    section: PropTypes.object.isRequired,\n    headingLevel: PropTypes.number\n};\n","import Fuse from 'fuse.js'; // https://fusejs.io/\n\n// check string values in an array of objects for \"search\" term\nexport function searchMembers(arr, search) {\n    if (!search || !arr || !Array.isArray(arr)) return [];\n    const fuse = new Fuse(arr, {\n        keys: ['name', 'description.children.children.value'], // keys to perform search on\n        threshold: 0.3 // slightly stricter\n    });\n    return fuse.search(search)\n        ? fuse.search(search).map((result) => result.item)\n        : [];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatters } from '../../util/formatters';\n\nexport default class Augments extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <div className=\"mt12\">\n                Extends{' '}\n                {section.augments.map((tag, i) => (\n                    <span\n                        key={i}\n                        dangerouslySetInnerHTML={{\n                            __html: `${formatters.autolink(tag.name)}`\n                        }}\n                    />\n                ))}\n                .\n            </div>\n        );\n    }\n}\n\nAugments.propTypes = {\n    section: PropTypes.shape({\n        augments: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatters } from '../../util/formatters';\n\nexport default class ClassName extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <div\n                className=\"txt-code my18 py12 px12 txt-s\"\n                dangerouslySetInnerHTML={{\n                    __html: `<span class=\"token keyword\">new</span> <span class=\"token class-name\">${\n                        section.name\n                    }</span>${formatters.parameters(section)}`\n                }}\n            />\n        );\n    }\n}\n\nClassName.propTypes = {\n    section: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Parameters extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Parameters\" {...this.props}>\n                {section.params.map((param, i) => (\n                    <div key={i} className=\"mb6\">\n                        <React.Fragment>\n                            <span className=\"txt-mono txt-bold\">\n                                {param.name}\n                            </span>\n                            <code className=\"color-gray\">\n                                ({formatType(param.type)})\n                            </code>\n                            {param.default && (\n                                <span>\n                                    {'('}\n                                    default <code>{param.default}</code>\n                                    {')'}\n                                </span>\n                            )}\n                            {toHtml(param.description, true)}\n                        </React.Fragment>\n                        {param.properties && (\n                            <div className=\"mt6 mb12 scroll-auto\">\n                                <table className=\"table table--fixed table--compact\">\n                                    <colgroup>\n                                        <col width=\"30%\" />\n                                        <col width=\"70%\" />\n                                    </colgroup>\n                                    <thead>\n                                        <tr className=\"bg-gray-faint\">\n                                            <th\n                                                style={{\n                                                    borderTopLeftRadius: '4px'\n                                                }}\n                                            >\n                                                Name\n                                            </th>\n                                            <th\n                                                style={{\n                                                    borderTopRightRadius: '4px'\n                                                }}\n                                            >\n                                                Description\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {param.properties.map((property, i) => (\n                                            <tr key={i}>\n                                                <td>\n                                                    <div className=\"txt-mono txt-bold txt-break-word\">\n                                                        {property.name}\n                                                    </div>\n\n                                                    <code className=\"inline-block color-gray txt-break-word\">\n                                                        {formatType(\n                                                            property.type\n                                                        )}\n                                                    </code>\n\n                                                    {property.default && (\n                                                        <div className=\"color-gray txt-break-word\">\n                                                            default:{' '}\n                                                            <code>\n                                                                {\n                                                                    property.default\n                                                                }\n                                                            </code>\n                                                        </div>\n                                                    )}\n                                                </td>\n                                                <td\n                                                    style={{\n                                                        wordBreak: 'break-word'\n                                                    }}\n                                                >\n                                                    {toHtml(\n                                                        property.description,\n                                                        true\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        )}\n                    </div>\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nParameters.propTypes = {\n    section: PropTypes.shape({\n        params: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Properties extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Properties\" {...this.props}>\n                {section.properties.map((property, i) => (\n                    <div key={i} className=\"mb6\">\n                        <span className=\"txt-mono txt-bold mr6\">\n                            {property.name}\n                        </span>\n                        <code className=\"color-gray\">\n                            ({formatType(property.type)})\n                        </code>\n                        {property.default && (\n                            <span>\n                                {'('}\n                                default <code>{property.default}</code>\n                                {')'}\n                            </span>\n                        )}\n                        {property.description && (\n                            <span>: {toHtml(property.description, true)}</span>\n                        )}\n                        {property.properties && (\n                            <ul>\n                                {property.properties.map((property, i) => (\n                                    <li key={i}>\n                                        <code>{property.name}</code>{' '}\n                                        {formatType(property.type)}\n                                        {property.default && (\n                                            <span>\n                                                {'('}\n                                                default{' '}\n                                                <code>{property.default}</code>\n                                                {')'}\n                                            </span>\n                                        )}\n                                        {toHtml(property.description)}\n                                    </li>\n                                ))}\n                            </ul>\n                        )}\n                    </div>\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nProperties.propTypes = {\n    section: PropTypes.shape({\n        properties: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Returns extends React.Component {\n    render() {\n        const { section } = this.props;\n        return section.returns.map((item, i) => (\n            <SectionWrapper key={i} title=\"Returns\" {...this.props}>\n                <code>{formatType(item.type)}</code>\n                {item.description && (\n                    <span>: {toHtml(item.description, true)}</span>\n                )}\n            </SectionWrapper>\n        ));\n    }\n}\n\nReturns.propTypes = {\n    section: PropTypes.shape({\n        returns: PropTypes.array.isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml, formatType } from '../../util/formatters';\n\nexport default class Throws extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Throws\" {...this.props}>\n                <ul>\n                    {section.throws.map((throws, i) => (\n                        <li key={i}>\n                            {formatType(throws.type)}:{' '}\n                            {toHtml(throws.description, true)}\n                        </li>\n                    ))}\n                </ul>\n            </SectionWrapper>\n        );\n    }\n}\n\nThrows.propTypes = {\n    section: PropTypes.shape({\n        throws: PropTypes.array\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeSnippet from '@mapbox/dr-ui/code-snippet';\nimport { highlightHtml } from '@mapbox/dr-ui/highlight/html';\nimport { highlightJsx } from '@mapbox/dr-ui/highlight/jsx';\n\nexport default class Copyable extends React.Component {\n    render() {\n        const highlight = {\n            html: () => highlightHtml,\n            markup: () => highlightHtml,\n            javascript: () => highlightJsx\n        };\n        return (\n            <CodeSnippet\n                maxHeight={300}\n                code={this.props.children}\n                highlighter={highlight[this.props.lang]}\n            />\n        );\n    }\n}\n\nCopyable.propTypes = {\n    children: PropTypes.node,\n    lang: PropTypes.oneOf(['html', 'markup', 'javascript'])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Copyable from '../../components/copyable.js';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml } from '../../util/formatters';\n\nexport default class Examples extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Example\" {...this.props}>\n                {section.examples.map((example, i) => (\n                    <div key={i} className=\"mb12 api-example\">\n                        {example.caption && <p>{toHtml(example.caption)}</p>}\n                        <Copyable lang=\"javascript\">\n                            {example.description}\n                        </Copyable>\n                    </div>\n                ))}\n            </SectionWrapper>\n        );\n    }\n}\n\nExamples.propTypes = {\n    section: PropTypes.shape({\n        examples: PropTypes.arrayOf(\n            PropTypes.shape({\n                caption: PropTypes.string,\n                description: PropTypes.string.isRequired\n            })\n        ).isRequired\n    }).isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionWrapper from './section-wrapper';\nimport { toHtml } from '../../util/formatters';\n\nexport default class Related extends React.Component {\n    render() {\n        const { section } = this.props;\n        return (\n            <SectionWrapper title=\"Related\" {...this.props}>\n                <ul>\n                    {section.sees.map((see, i) => (\n                        <li key={i}>{toHtml(see.description, true)}</li>\n                    ))}\n                </ul>\n            </SectionWrapper>\n        );\n    }\n}\n\nRelated.propTypes = {\n    section: PropTypes.shape({\n        sees: PropTypes.array.isRequired\n    }).isRequired\n};\n","export default function empty(members) {\n    return !members || members.length === 0;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MembersList from './members-list';\nimport Augments from './augments';\nimport ClassName from './class-name';\nimport Parameters from './parameters';\nimport Properties from './properties';\nimport Returns from './returns';\nimport Throws from './throws';\nimport Examples from './examples';\nimport Related from './related';\nimport { toHtml } from '../../util/formatters';\nimport empty from '../../util/empty';\n\nclass ApiItemContents extends React.Component {\n    render() {\n        const section = this.props;\n        const membersList = (members, title) =>\n            !empty(members) && (\n                <MembersList\n                    headingLevel={this.props.headingLevel}\n                    section={section}\n                    title={title}\n                    members={members}\n                />\n            );\n\n        return (\n            <React.Fragment>\n                {toHtml(section.description)}\n\n                {!empty(section.augments) && (\n                    <Augments\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {section.kind === 'class' &&\n                    !section.interface &&\n                    (!section.constructorComment ||\n                        section.constructorComment.access !== 'private') && (\n                        <ClassName\n                            headingLevel={this.props.headingLevel}\n                            section={section}\n                        />\n                    )}\n\n                {!empty(section.params) &&\n                    (section.kind !== 'class' ||\n                        !section.constructorComment ||\n                        section.constructorComment.access !== 'private') && (\n                        <Parameters\n                            headingLevel={this.props.headingLevel}\n                            section={section}\n                        />\n                    )}\n\n                {!empty(section.properties) && (\n                    <Properties\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {section.returns && (\n                    <Returns\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {!empty(section.throws) && (\n                    <Throws\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {!empty(section.examples) && (\n                    <Examples\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n\n                {membersList(section.members.static, 'Static Members')}\n                {membersList(section.members.instance, 'Instance Members')}\n                {membersList(section.members.events, 'Events')}\n\n                {!empty(section.sees) && (\n                    <Related\n                        headingLevel={this.props.headingLevel}\n                        section={section}\n                    />\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nApiItemContents.propTypes = {\n    augments: PropTypes.array,\n    kind: PropTypes.string,\n    constructorComment: PropTypes.shape({\n        access: PropTypes.string\n    }),\n    description: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    interface: PropTypes.string,\n    params: PropTypes.array,\n    properties: PropTypes.array,\n    returns: PropTypes.array,\n    throws: PropTypes.array,\n    examples: PropTypes.array,\n    members: PropTypes.object,\n    sees: PropTypes.array,\n    headingLevel: PropTypes.number\n};\n\nexport default ApiItemContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SectionHeading from './section-heading';\nimport ApiItemContents from './item-contents';\nimport SectionWrapper from './section-wrapper';\n\nclass ApiItem extends React.Component {\n    render() {\n        const section = this.props;\n        return (\n            <SectionWrapper\n                headingLevel={section.headingLevel}\n                titleComponent={\n                    !section.nested && (\n                        <SectionHeading\n                            headingLevel={section.headingLevel}\n                            section={section}\n                        />\n                    )\n                }\n            >\n                <ApiItemContents\n                    {...this.props}\n                    headingLevel={section.headingLevel + 1} // increment heading level to maintain hierarchy on subordinate items\n                />\n            </SectionWrapper>\n        );\n    }\n}\n\nApiItem.propTypes = {\n    nested: PropTypes.bool,\n    headingLevel: PropTypes.number.isRequired\n};\n\nexport default ApiItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ApiItem from './item';\nimport ApiItemContents from './item-contents';\nimport Github from './github';\nimport { toHtml } from '../../util/formatters';\n\nconst apiFilterItems = require('../../util/api-filter-items.js');\n\nexport default class ApiPageItems extends React.Component {\n    pageDocSource = apiFilterItems(this.props.name);\n    children = this.pageDocSource[0].members.static;\n    renderDescription = () => {\n        const description = this.pageDocSource[0].description || false;\n        if (description) return toHtml(description);\n    };\n    renderItems = () => {\n        // There are 2 layouts based on the content:\n        // 1. `SingleSection` (for Maps page)\n        // 2. `Section` (for all other pages)\n\n        if (this.children.length === 1) {\n            return <SingleSection {...this.children[0]} {...this.props} />;\n        }\n        return this.children.map((child) => (\n            <Section key={child.name} {...this.props} {...child} />\n        ));\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderDescription()}\n                {this.renderItems()}\n            </React.Fragment>\n        );\n    }\n}\n\nApiPageItems.propTypes = {\n    name: PropTypes.string.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nclass Section extends React.Component {\n    render() {\n        const child = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"mb18\">\n                    <ApiItem headingLevel={2} {...child} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nSection.propTypes = {\n    name: PropTypes.string.isRequired,\n    location: PropTypes.object.isRequired\n};\n\nclass SingleSection extends React.Component {\n    render() {\n        const child = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"mt30-mm mt-neg30-mxl\">\n                    <Github section={child} />\n                </div>\n                <div className=\"mb18\">\n                    <ApiItemContents {...child} headingLevel={2} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nSingleSection.propTypes = {\n    location: PropTypes.object.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageShell from '../page-shell';\nimport ApiPageItems from './api-page-items.js';\n\nexport default class Api extends React.Component {\n    render() {\n        this.props.frontMatter.hideFeedback = true;\n        return (\n            <PageShell {...this.props}>\n                <div className=\"prose mb18\">\n                    <ApiPageItems\n                        name={this.props.name || this.props.frontMatter.title}\n                        location={this.props.location}\n                    />\n                </div>\n            </PageShell>\n        );\n    }\n}\n\nApi.propTypes = {\n    frontMatter: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        hideFeedback: PropTypes.bool\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n    name: PropTypes.string // when the documentation.yml `name` doesn't match the page's title, use this prop to define the documentation.yml `name`\n};\n","\n      let Page = require('/home/runner/work/ja-maplibre-gl-js-docs/ja-maplibre-gl-js-docs/docs/pages/api/map.js');\n      Page = Page.default || Page;\n      module.exports = {\n        component: Page,\n        props: {\n  \"frontMatter\": {\n    \"title\": \"Map\",\n    \"description\": \"The Map object represents the map on your page. It exposes methods and properties that enable you to programmatically change the map, and fires events as users interact with it.\",\n    \"contentType\": \"API\",\n    \"order\": 2,\n    \"layout\": \"page\",\n    \"language\": [\n      \"JavaScript\"\n    ],\n    \"products\": [\n      \"MapLibre GL JS\"\n    ]\n  }\n}\n      };\n    "],"sourceRoot":""}